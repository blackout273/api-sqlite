{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { Register } from \"./src/pages\";\nimport { Login } from \"./src/pages\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar client = new ApolloClient({\n  uri: 'localhost:3000/graphql',\n  cache: new InMemoryCache()\n});\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasToken = _useState2[0],\n      setHasToken = _useState2[1];\n\n  function verifyAccessToken() {\n    setHasToken(function (estadoAnterior) {\n      return !estadoAnterior;\n    });\n  }\n\n  return _jsx(ApolloProvider, {\n    client: client,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [!hasToken ? _jsx(Register, {\n        verifyAccessToken: verifyAccessToken\n      }) : _jsx(Login, {\n        verifyAccessToken: verifyAccessToken\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nAppRegistry.registerComponent('MyApplication', function () {\n  return App;\n});","map":{"version":3,"names":["StatusBar","Register","Login","ApolloClient","InMemoryCache","ApolloProvider","React","useState","client","uri","cache","App","hasToken","setHasToken","verifyAccessToken","estadoAnterior","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","AppRegistry","registerComponent"],"sources":["C:/Users/Danillo/Desktop/documentosEstacio/Programação para dispositivos moveis/crud/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, AppRegistry } from 'react-native';\nimport { Register } from './src/pages';\nimport { Login } from './src/pages'\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nimport React, { useState } from 'react'\n\n// Initialize Apollo Client\nconst client = new ApolloClient({\n  uri: 'localhost:3000/graphql',\n  cache: new InMemoryCache()\n});\n\n\nexport default function App() {\n  const [hasToken, setHasToken] = useState(false)\n\n  function verifyAccessToken() {\n\n    setHasToken((estadoAnterior) => {\n      return !estadoAnterior\n    })\n  }\n\n  return (\n    <ApolloProvider client={client}>\n      <View style={styles.container}>\n        {!hasToken ? (<Register verifyAccessToken={verifyAccessToken} />) : (<Login verifyAccessToken={verifyAccessToken} />)}\n        <StatusBar style=\"auto\" />\n      </View>\n    </ApolloProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\nAppRegistry.registerComponent('MyApplication', () => App);"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;AAEA,SAASC,QAAT;AACA,SAASC,KAAT;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,gBAA5D;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,IAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;EAC9BM,GAAG,EAAE,wBADyB;EAE9BC,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;AAMA,eAAe,SAASO,GAAT,GAAe;EAC5B,gBAAgCJ,QAAQ,CAAC,KAAD,CAAxC;EAAA;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,SAASC,iBAAT,GAA6B;IAE3BD,WAAW,CAAC,UAACE,cAAD,EAAoB;MAC9B,OAAO,CAACA,cAAR;IACD,CAFU,CAAX;EAGD;;EAED,OACE,KAAC,cAAD;IAAgB,MAAM,EAAEP,MAAxB;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEQ,MAAM,CAACC,SAApB;MAAA,WACG,CAACL,QAAD,GAAa,KAAC,QAAD;QAAU,iBAAiB,EAAEE;MAA7B,EAAb,GAAoE,KAAC,KAAD;QAAO,iBAAiB,EAAEA;MAA1B,EADvE,EAEE,KAAC,SAAD;QAAW,KAAK,EAAC;MAAjB,EAFF;IAAA;EADF,EADF;AAQD;AAED,IAAME,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf;AAQAC,WAAW,CAACC,iBAAZ,CAA8B,eAA9B,EAA+C;EAAA,OAAMd,GAAN;AAAA,CAA/C"},"metadata":{},"sourceType":"module"}