{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Login } from \"../\";\nimport SQLite from 'react-native-sqlite-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase({\n  name: \"dadosUsuarios\",\n  location: \"default\"\n}, function () {}, function (error) {\n  console.log(error);\n});\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      botao = _useState2[0],\n      setBotao = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      usuario = _useState6[0],\n      setUsuario = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      senha1 = _useState8[0],\n      setSenha1 = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      senha2 = _useState10[0],\n      setSenha2 = _useState10[1];\n\n  useEffect(function () {\n    createTable();\n  }, []);\n\n  function createTable() {\n    db.transaction(function (tx) {\n      tx.executeSql(\"CREATE TABLE IF NOT EXISTS \" + \"dadosUsuarios\" + \"( id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, email VARCHAR (100), senha VARCHAR (64), usuario VARCHAR (64), createdAt DATETIME DEFAULT (CURRENT_TIMESTAMP) );\");\n    });\n  }\n\n  function validation() {\n    return _validation.apply(this, arguments);\n  }\n\n  function _validation() {\n    _validation = _asyncToGenerator(function* () {\n      try {\n        if (email && usuario && senha1 && senha2) {\n          if (senha1 != senha2) {\n            alert('Senhas diferentes');\n          } else {\n            console.log(\"request\");\n            yield db.transaction(function () {\n              var _ref2 = _asyncToGenerator(function* (tx) {\n                yield tx.executeSql(\"INSERT INTO dadosUsuarios VALUES(?,?,?)\", [email, usuario, senha1]);\n              });\n\n              return function (_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n            if (response) {\n              alert(\"email: \" + email + \"  usuario: \" + usuario + \" senha: \" + senha1);\n            } else {\n              alert(\"Erro n\\xE3o programado\");\n            }\n          }\n        } else {\n          alert('Preencher todos os campos');\n        }\n      } catch (error) {\n        throw new Error(\"Erro: \" + error);\n      }\n    });\n    return _validation.apply(this, arguments);\n  }\n\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsx(Image, {\n      style: style.image,\n      source: {\n        uri: \"https://repository-images.githubusercontent.com/78664391/f7e46780-6bf6-11eb-999f-8212c69d76bc\"\n      }\n    }), _jsx(Text, {\n      children: \"E-mail\"\n    }), _jsx(TextInput, {\n      style: style.input,\n      onChangeText: setEmail\n    }), _jsx(Text, {\n      children: \"Usu\\xE1rio\"\n    }), _jsx(TextInput, {\n      style: style.input,\n      onChangeText: setUsuario\n    }), _jsx(Text, {\n      children: \"Senha\"\n    }), _jsx(TextInput, {\n      style: style.input,\n      onChangeText: setSenha1\n    }), _jsx(Text, {\n      children: \"Senha\"\n    }), _jsx(TextInput, {\n      style: style.input,\n      onChangeText: setSenha2\n    }), _jsx(TouchableOpacity, {\n      style: style.btn,\n      onPress: function onPress() {\n        return validation();\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Register\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: style.btn,\n      onPress: function onPress() {\n        return navigation.navigate(\"Login\");\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Login\"\n      })\n    })]\n  });\n};\n\nvar style = StyleSheet.create({\n  btn: {\n    backgroundColor: \"red\",\n    color: \"#FFFFFF\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"black\",\n    marginTop: 20,\n    width: 100\n  },\n  input: {\n    textAlign: \"center\",\n    width: 100,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"black\",\n    borderRadius: \"5%\",\n    borderRadius: 10\n  },\n  image: {\n    alignSelf: \"center\",\n    width: 120,\n    height: 100\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Register;","map":{"version":3,"names":["React","useEffect","useState","Login","SQLite","db","openDatabase","name","location","error","console","log","Register","navigation","botao","setBotao","email","setEmail","usuario","setUsuario","senha1","setSenha1","senha2","setSenha2","createTable","transaction","tx","executeSql","validation","alert","response","Error","style","container","image","uri","input","btn","color","navigate","StyleSheet","create","backgroundColor","alignItems","borderRadius","borderWidth","borderStyle","borderColor","marginTop","width","textAlign","alignSelf","height","flex","justifyContent"],"sources":["C:/Users/Danillo/Desktop/documentosEstacio/Programação para dispositivos moveis/crud/src/pages/Register/Register.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity, Image } from 'react-native'\r\nimport { Login } from '../'\r\n\r\nimport SQLite from 'react-native-sqlite-storage'\r\n\r\nconst db = SQLite.openDatabase({\r\n    name: \"dadosUsuarios\",\r\n    location: \"default\"\r\n},\r\n    () => { },\r\n    error => { console.log(error) }\r\n)\r\n\r\n// import GraphqlService from '../../functions/axios'\r\n// const service = new GraphqlService()\r\n\r\n\r\n\r\nconst Register = ({ navigation }) => {\r\n    const [botao, setBotao] = useState()\r\n    const [email, setEmail] = useState()\r\n    const [usuario, setUsuario] = useState()\r\n    const [senha1, setSenha1] = useState()\r\n    const [senha2, setSenha2] = useState()\r\n\r\n    useEffect(()=>{\r\n        createTable()\r\n    },[])\r\n\r\n    function createTable(){\r\n        db.transaction((tx)=>{\r\n            tx.executeSql(\r\n                \"CREATE TABLE IF NOT EXISTS \"\r\n                + \"dadosUsuarios\"\r\n                + \"( id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, email VARCHAR (100), senha VARCHAR (64), usuario VARCHAR (64), createdAt DATETIME DEFAULT (CURRENT_TIMESTAMP) );\" \r\n                )\r\n        })\r\n    }\r\n    \r\n    async function validation() {\r\n        try {\r\n            if (email && usuario && senha1 && senha2) {\r\n                if (senha1 != senha2) {\r\n                    alert('Senhas diferentes')\r\n                } else {\r\n                    console.log(\"request\")\r\n                    // const response = service.post(JSON.stringify(email), JSON.stringify(usuario), JSON.stringify(senha1))\r\n                    await db.transaction(async (tx)=>{\r\n                        // await tx.executeSql(\"INSERT INTO dadosUsuarios VALUES('\"+email+\"','\"+usuario+\"','\"+senha1+\"' )\")\r\n                        await tx.executeSql(\"INSERT INTO dadosUsuarios VALUES(?,?,?)\",[email,usuario,senha1])\r\n                    })\r\n                    if (response) {\r\n                        alert(`email: ${email}  usuario: ${usuario} senha: ${senha1}`)\r\n\r\n                    } else {\r\n                        alert(`Erro não programado`)\r\n                    }\r\n                }\r\n            } else {\r\n                alert('Preencher todos os campos')\r\n            }\r\n        } catch (error) {\r\n            throw new Error(`Erro: ${error}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={style.container}>\r\n            <Image style={style.image} source={{ uri: \"https://repository-images.githubusercontent.com/78664391/f7e46780-6bf6-11eb-999f-8212c69d76bc\" }} />\r\n            <Text>E-mail</Text>\r\n            <TextInput style={style.input} onChangeText={setEmail} ></TextInput>\r\n            <Text>Usuário</Text>\r\n            <TextInput style={style.input} onChangeText={setUsuario}></TextInput>\r\n            <Text>Senha</Text>\r\n            <TextInput style={style.input} onChangeText={setSenha1}></TextInput>\r\n            <Text>Senha</Text>\r\n            <TextInput style={style.input} onChangeText={setSenha2}></TextInput>\r\n            <TouchableOpacity style={style.btn} onPress={() => validation()} ><Text style={{ color: \"white\" }}>Register</Text></TouchableOpacity>\r\n            <TouchableOpacity style={style.btn} onPress={() => navigation.navigate(\"Login\")} ><Text style={{ color: \"white\" }}>Login</Text></TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    btn: {\r\n        backgroundColor: \"red\",\r\n        color: \"#FFFFFF\",\r\n        alignItems: \"center\",\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"black\",\r\n        marginTop: 20,\r\n        width: 100\r\n    },\r\n    input: {\r\n        textAlign: \"center\",\r\n        width: 100,\r\n        borderWidth: 1,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"black\",\r\n        borderRadius: \"5%\",\r\n        borderRadius: 10\r\n    },\r\n    image: {\r\n        alignSelf: \"center\",\r\n        width: 120,\r\n        height: 100\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n})\r\n\r\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module"}