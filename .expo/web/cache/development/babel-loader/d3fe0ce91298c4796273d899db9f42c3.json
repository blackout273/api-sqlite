{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Login } from \"../\";\nimport GraphqlService from \"../../functions/axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar service = new GraphqlService();\n\nvar Register = function Register(_ref) {\n  var verifyAccessToken = _ref.verifyAccessToken;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      botao = _useState2[0],\n      setBotao = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      usuario = _useState6[0],\n      setUsuario = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      senha1 = _useState8[0],\n      setSenha1 = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      senha2 = _useState10[0],\n      setSenha2 = _useState10[1];\n\n  function validation() {\n    try {\n      if (email && usuario && senha1 && senha2) {\n        if (senha1 != senha2) {\n          alert('Senhas diferentes');\n        } else {\n          console.log(\"request\");\n          service.post(JSON.stringify(email), JSON.stringify(usuario), JSON.stringify(senha1));\n          alert(\"email: \" + email + \"  usuario \" + usuario + \" senha1: \" + senha1);\n        }\n      } else {\n        alert('Preencher todos os campos');\n      }\n    } catch (error) {\n      throw new Error(\"Erro: {}\");\n    }\n  }\n\n  function validationToLogin() {\n    verifyAccessToken();\n  }\n\n  return _jsxs(View, {\n    children: [_jsx(Image, {\n      style: style.image,\n      source: {\n        uri: \"https://repository-images.githubusercontent.com/78664391/f7e46780-6bf6-11eb-999f-8212c69d76bc\"\n      }\n    }), _jsx(Text, {\n      children: \"E-mail\"\n    }), _jsx(TextInput, {\n      style: style.input,\n      onChangeText: setEmail\n    }), _jsx(Text, {\n      children: \"Usu\\xE1rio\"\n    }), _jsx(TextInput, {\n      style: style.input,\n      onChangeText: setUsuario\n    }), _jsx(Text, {\n      children: \"Senha\"\n    }), _jsx(TextInput, {\n      style: style.input,\n      onChangeText: setSenha1\n    }), _jsx(Text, {\n      children: \"Senha\"\n    }), _jsx(TextInput, {\n      style: style.input,\n      onChangeText: setSenha2\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        width: \"100%\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: style.btn,\n        onPress: function onPress() {\n          return validation();\n        },\n        children: \"Register\"\n      }), _jsx(TouchableOpacity, {\n        style: style.btn,\n        onPress: function onPress() {\n          return validationToLogin();\n        },\n        children: \"Login\"\n      })]\n    })]\n  });\n};\n\nvar style = StyleSheet.create({\n  btn: {\n    width: \"50%\",\n    backgroundColor: \"red\",\n    color: \"#FFFFFF\",\n    fontFamily: \"arial\",\n    textAlign: \"center\",\n    marginTop: 10,\n    borderRadius: 10,\n    border: \"1px solid black\",\n    margin: 1\n  },\n  input: {\n    border: \"1px solid black\",\n    borderRadius: \"5%\",\n    borderRadius: 10\n  },\n  image: {\n    alignSelf: \"center\",\n    width: 120,\n    height: 100\n  }\n});\nexport default Register;","map":{"version":3,"names":["React","useState","Login","GraphqlService","service","Register","verifyAccessToken","botao","setBotao","email","setEmail","usuario","setUsuario","senha1","setSenha1","senha2","setSenha2","validation","alert","console","log","post","JSON","stringify","error","Error","validationToLogin","style","image","uri","input","flexDirection","width","btn","StyleSheet","create","backgroundColor","color","fontFamily","textAlign","marginTop","borderRadius","border","margin","alignSelf","height"],"sources":["C:/Users/Danillo/Desktop/documentosEstacio/Programação para dispositivos moveis/crud/src/pages/Register/Register.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity, Image } from 'react-native'\r\nimport { Login } from '../'\r\nimport GraphqlService from '../../functions/axios'\r\nconst service = new GraphqlService()\r\n\r\nconst Register = ({ verifyAccessToken }) => {\r\n    const [botao, setBotao] = useState()\r\n    const [email, setEmail] = useState()\r\n    const [usuario, setUsuario] = useState()\r\n    const [senha1, setSenha1] = useState()\r\n    const [senha2, setSenha2] = useState()\r\n\r\n\r\n\r\n\r\n    function validation() {\r\n        try {\r\n            if (email && usuario && senha1 && senha2) {\r\n                if (senha1 != senha2) {\r\n                    alert('Senhas diferentes')\r\n                } else {\r\n    \r\n    \r\n                    console.log(\"request\")\r\n                    service.post(JSON.stringify(email), JSON.stringify(usuario), JSON.stringify(senha1))\r\n    \r\n                    alert(`email: ${email}  usuario ${usuario} senha1: ${senha1}`)\r\n                }\r\n            } else {\r\n                alert('Preencher todos os campos')\r\n            } \r\n        } catch (error) {\r\n            throw new Error(\"Erro: {}\")\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    function validationToLogin() {\r\n        verifyAccessToken()\r\n\r\n    }\r\n    return (\r\n        <View>\r\n            <Image style={style.image} source={{ uri: \"https://repository-images.githubusercontent.com/78664391/f7e46780-6bf6-11eb-999f-8212c69d76bc\" }} />\r\n            <Text>E-mail</Text>\r\n            <TextInput style={style.input} onChangeText={setEmail} ></TextInput>\r\n            <Text>Usuário</Text>\r\n            <TextInput style={style.input} onChangeText={setUsuario}></TextInput>\r\n            <Text>Senha</Text>\r\n            <TextInput style={style.input} onChangeText={setSenha1}></TextInput>\r\n            <Text>Senha</Text>\r\n            <TextInput style={style.input} onChangeText={setSenha2}></TextInput>\r\n            <View style={{ flexDirection: \"row\", width: \"100%\" }}>\r\n                <TouchableOpacity style={style.btn} onPress={() => validation()} >Register</TouchableOpacity>\r\n                <TouchableOpacity style={style.btn} onPress={() => validationToLogin()} >Login</TouchableOpacity>\r\n\r\n            </View>\r\n\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    btn: {\r\n        width: \"50%\",\r\n        backgroundColor: \"red\",\r\n        color: \"#FFFFFF\",\r\n        fontFamily: \"arial\",\r\n        textAlign: \"center\",\r\n        marginTop: 10,\r\n        borderRadius: 10,\r\n        border: \"1px solid black\",\r\n        margin: 1\r\n    },\r\n    input: {\r\n        border: \"1px solid black\",\r\n        borderRadius: \"5%\",\r\n        borderRadius: 10\r\n    },\r\n    image: {\r\n        alignSelf: \"center\",\r\n        width: 120,\r\n        height: 100\r\n    }\r\n})\r\n\r\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module"}