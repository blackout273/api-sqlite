{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Users from \"../../functions/database/usuarios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function () {\n  var _ref2 = _asyncToGenerator(function* (_ref) {\n    var navigation = _ref.navigation;\n\n    var _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        botao = _useState2[0],\n        setBotao = _useState2[1];\n\n    var _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n    var _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        senha = _useState6[0],\n        setSenha = _useState6[1];\n\n    var users = yield Users.all();\n    console.log(users);\n\n    function validation() {\n      return _validation.apply(this, arguments);\n    }\n\n    function _validation() {\n      _validation = _asyncToGenerator(function* () {\n        if (email && senha) {\n          var checkUser = Users.find(email);\n          console.log(checkUser);\n\n          if (checkUser) {\n            navigation.navigate(\"MainPage\");\n          } else {\n            alert(\"Username/Senha errada\");\n            navigation.navigate(\"Login\");\n          }\n        } else {\n          alert('Preencher todos os campos');\n        }\n      });\n      return _validation.apply(this, arguments);\n    }\n\n    return _jsxs(View, {\n      style: style.container,\n      children: [_jsx(Image, {\n        style: style.image,\n        source: {\n          uri: \"https://repository-images.githubusercontent.com/78664391/f7e46780-6bf6-11eb-999f-8212c69d76bc\"\n        }\n      }), _jsx(Text, {\n        children: \"E-mail\"\n      }), _jsx(TextInput, {\n        style: style.input,\n        id: \"1\",\n        onChangeText: setEmail\n      }), _jsx(Text, {\n        children: \"Senha\"\n      }), _jsx(TextInput, {\n        style: style.input,\n        id: \"3\",\n        onChangeText: setSenha\n      }), _jsx(TouchableOpacity, {\n        style: style.btn,\n        onPress: function onPress() {\n          return validation();\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Go\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: style.btn,\n        onPress: function onPress() {\n          return navigation.navigate(\"Register\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Register\"\n        })\n      })]\n    });\n  });\n\n  return function Login(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar style = StyleSheet.create({\n  btn: {\n    backgroundColor: \"red\",\n    color: \"#FFFFFF\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"black\",\n    marginTop: 20,\n    width: 100\n  },\n  input: {\n    textAlign: \"center\",\n    width: 100,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"black\",\n    borderRadius: \"5%\",\n    borderRadius: 10\n  },\n  image: {\n    alignSelf: \"center\",\n    width: 120,\n    height: 100\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","Users","Login","navigation","botao","setBotao","email","setEmail","senha","setSenha","users","all","console","log","validation","checkUser","find","navigate","alert","style","container","image","uri","input","btn","color","StyleSheet","create","backgroundColor","alignItems","borderRadius","borderWidth","borderStyle","borderColor","marginTop","width","textAlign","alignSelf","height","flex","justifyContent"],"sources":["C:/Users/Danillo/Desktop/documentosEstacio/Programação para dispositivos moveis/crud/src/pages/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity, Image } from 'react-native'\r\n// import GraphqlService from '../../functions/axios'\r\n// const service = new GraphqlService()\r\nimport Users from '../../functions/database/usuarios'\r\n\r\nconst Login = async ({navigation }) => {\r\n    const [botao, setBotao] = useState()\r\n    const [email, setEmail] = useState()\r\n    const [senha, setSenha] = useState()\r\n    let users = await Users.all()\r\n    console.log(users)\r\n    async function validation() {\r\n        if (email && senha) {\r\n            const checkUser = Users.find(email)\r\n            console.log(checkUser)\r\n            // const checkUser = await service.checkUser(email)\r\n            if (checkUser) {\r\n                navigation.navigate(\"MainPage\")\r\n            }else{\r\n                alert(\"Username/Senha errada\")\r\n                navigation.navigate(\"Login\")\r\n            }\r\n        } else {\r\n            alert('Preencher todos os campos')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={style.container}>\r\n            <Image style={style.image} source={{ uri: \"https://repository-images.githubusercontent.com/78664391/f7e46780-6bf6-11eb-999f-8212c69d76bc\" }} />\r\n            <Text>E-mail</Text>\r\n            <TextInput style={style.input} id=\"1\" onChangeText={setEmail} ></TextInput>\r\n            <Text>Senha</Text>\r\n            <TextInput style={style.input} id=\"3\" onChangeText={setSenha}></TextInput>\r\n            <TouchableOpacity style={style.btn} onPress={() => validation()} ><Text style={{ color: \"white\" }}>Go</Text></TouchableOpacity>\r\n            <TouchableOpacity style={style.btn} onPress={() =>  navigation.navigate(\"Register\")} ><Text style={{ color: \"white\" }}>Register</Text></TouchableOpacity>\r\n\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    btn: {\r\n        backgroundColor: \"red\",\r\n        color: \"#FFFFFF\",\r\n        alignItems: \"center\",\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"black\",\r\n        marginTop:20,\r\n        width:100\r\n    },\r\n    input: {\r\n        textAlign:\"center\",\r\n        width:100,\r\n        borderWidth: 1,\r\n        borderStyle:\"solid\",\r\n        borderColor:\"black\",\r\n        borderRadius: \"5%\",\r\n        borderRadius: 10\r\n    },\r\n    image: {\r\n        alignSelf: \"center\",\r\n        width: 120,\r\n        height: 100\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }\r\n})\r\n\r\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module"}